@model IEnumerable<SCIRA.Models.c_rango>

@using SCIRA.Models
@using System.Reflection;
@using SCIRA.Utilidades

@{
    ViewBag.Title = "Configuración Riesgo Residual";
    Layout = "~/Views/Shared/_LayoutIndex.cshtml";
    var db = new SCIRA.Models.SICIEntities();
    List<SCIRA.ViewModels.RangoModel> costeo = (List<SCIRA.ViewModels.RangoModel>)ViewBag.costeo;
    var coste = db.c_rango_costeo;
}

<link href="~/Content/AnimacionCarga.css" rel="stylesheet" />
<link href="~/Content/font-awesome.min.css" rel="stylesheet" />

<link href="~/Content/base.css" rel="stylesheet" />
<link href="~/Content/bootstrap-datetimepicker.css" rel="stylesheet" />

<script type="text/javascript" src="~/Scripts/moment-with-locales.js"></script>
<script type="text/javascript" src="~/Scripts/bootstrap-datetimepicker.js"></script>
<script type="text/javascript" src="~/Scripts/sharedScripts.js"></script>

@{
    int suma = 0;
    foreach (var item in db.c_rango_costeo)
    {
        suma += ((int)item.pr_costeo);
    }
}

<h2>@Strings.getMSG("ValoracionRiesgoindex001")</h2>

<ul class="nav nav-tabs">
    <li class="active"><a href="#diseñoControl" data-toggle="tab"><h4>@Strings.getMSG("ValoracionRiesgoindex001")</h4></a></li>
    <li><a href="#efectividadControl" data-toggle="tab"><h4>@Strings.getMSG("")</h4>Ponderacion de Criterios</a></li>

</ul>

<div id="myTabContent" class="tab-content">
    <div class="tab-pane fade active in" id="diseñoControl">
        <br />
        <p>
            @Html.ActionLink(Strings.getMSG("Agregar"), "Create", null, new { @class = "btn btn-default btn-sm" })
        </p>
        <table class="results table table-striped table-bordered table-hover">
            <thead>
                <tr>
                    <th class="search">@Strings.getMSG("Clave")</th>
                    <th class="search">@Strings.getMSG("Nombre")</th>
                    <th>@Strings.getMSG("Color")</th>
                    <th class="search">@Strings.getMSG("RiesgoResidualConfigIndex030")</th>
                    <th class="search">@Strings.getMSG("ValoracionRiesgoindex003")</th>
                    <th class="search">@Strings.getMSG("ValoracionRiesgoindex004")</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td> @Html.DisplayFor(modelItem => item.cl_rango)</td>
                        <td> @Html.DisplayFor(modelItem => item.nb_rango)</td>
                        <td style="color:@item.cl_color_campo;font-size: 3rem;background-color:white;">
                            <center>▰</center>
                        </td>
                        <td> @Html.DisplayFor(modelItem => item.valor)</td>
                        <td> @(item.segmentacion_calificacion)</td>
                        <td> @(item.segmentacion_calificacion2)</td>
                        <td>
                            <center>
                                |
                                <a href="@Url.Action("Edit", new { id = item.id_rango })">
                                    <i class="glyphicon glyphicon-pencil" title="@Strings.getMSG("Editar")"></i>
                                </a>
                                |
                                <a href="@Url.Action("Delete", new { id = item.id_rango })">
                                    <i class="glyphicon glyphicon-trash" title="@Strings.getMSG("Borrar")"></i>
                                </a>
                                |
                            </center>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="tab-pane" id="efectividadControl">
        <!-- comienza la SEGUNDA pantalla-->
        <br />
        <form id="form1">
            <p>
                @Html.ActionLink(Strings.getMSG("Agregar"), "CreateCosteo", null, new { @class = "btn btn-default btn-sm" })
            </p>
            <table class="results table table-striped table-bordered table-hover tblrango">
                <thead>
                    <tr>
                        <th>@Strings.getMSG("ValoracionRiesgoindex002")</th>
                        <th>
                            @Strings.getMSG("RiesgoResidualConfigIndex020"):&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;
                            &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Total de la suma debe de ser del : @suma %
                        </th>
                        <th></th>
                    </tr>
                </thead>



                @*1 : input1 , input 2 , input3
                    2 : input1, input2, input3*@


                <tbody>
                    @foreach (var item in db.c_rango_costeo)
                    {
                        <tr id="@item.id_rango_costeo">

                            <td>@(item.cl_rango_costeo)  -  @(item.nb_rango_costeo)</td>
                            <td>
                                <center>
                                    @Html.EditorFor(modelItem => item.pr_costeo, new { htmlAttributes = new { @class = "form-control val", @id = "a" + @item.id_rango_costeo, @type = "number" } })
                                </center>
                            </td>
                            <td>
                                <center>
                                    |
                                    <a href="@Url.Action("EditCosteo", new { id = item.id_rango_costeo })">
                                        <i class="glyphicon glyphicon-pencil" title="@Strings.getMSG("EditarCosteo")"></i>
                                    </a>
                                    |
                                    <a href="@Url.Action("DeleteCosteo", new { id = item.id_rango_costeo })">
                                        <i class="glyphicon glyphicon-trash" title="@Strings.getMSG("BorrarCosteo")"></i>
                                    </a>
                                    |
                                </center>
                            </td>

                        </tr>
                    }
                </tbody>

            </table>


        </form>
        <input type="button" class="btn btn-primary pull-right" value="@Strings.getMSG("Guardar")" onclick="PorcentajeAreaCosteo();" />
    </div>

</div>





@using (Html.BeginForm("ActualizarNombres", "Rango", FormMethod.Post, new { @id = "" }))
{
    @Html.AntiForgeryToken()
    <input type="hidden" id="id_rango_costeo" name="id_rango_costeo">
    <input type="hidden" id="pr_costeo" name="pr_costeo">
}

<script>

      @foreach (var item in db.c_rango_costeo)
    {
     @:var id = "@item.id_rango_costeo";
    @:$("#a" + id).val(parseFloat(cppc("@item.pr_costeo")));
    }

    function PorcentajeAreaCosteo() {


        let tblResultados = document.querySelectorAll(".tblrango tbody tr");
        let array = [];
        tblResultados.forEach(tr => {
            let value = tr.querySelector("input");
            let data = {
                id_rango_costeo: tr.id,
                pr_costeo: value.value
            }
            array.push(data);
        });

        console.log(array)
        console.log("Hola")


        //var ids = id;

        //var vals = $("#a" + id).val();
        //if (vals == null) vals = 0;
        //if (vals == 0) vals = 0;

        //res = '';
        //console.log(  ids, vals);

        let json = JSON.stringify(array);

        var valid = true;
       // valid = validCosteo(vals) && valid;

        if (valid) {
            //dat = { "ids": ids, "vals": vals };
            url = '@Url.Action("ActualizarNombres", "Rango")';

            $.ajax({
                url: url,
                type: 'POST',
                data: JSON.stringify(array),
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                success: function (data) {
                    var obj = JSON.parse(data);
                    if (obj.error != undefined) {
                        toastr.error(obj.error);
                        $("#a" + obj.id).val(obj.originalVal);
                    } else {
                        toastr.success("Se han guardado los cambios con éxito.")
                        $("#a" + obj.id).val(obj.val);
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    toastr.error("La suma de los valores deben de ser del 100%. Asegurate de ingresar bien los porcentajes %.@(ViewBag.suma)");
                }
            });
        }
    }

    function isValidNumber(number) {
        var bool = true;
        if (isNaN(number)) bool = false;
        if (number < 0) {
            bool = false;
            toastr.error("El valor no puede ser menor a 0");
        }
        return bool;
    }

    function validCosteo(number) {
        var bool = true;
        if (number > 100) {
            bool = false;
            toastr.error("El valor no puede ser mayor a 100%")
        }

        return bool;
    }


</script>