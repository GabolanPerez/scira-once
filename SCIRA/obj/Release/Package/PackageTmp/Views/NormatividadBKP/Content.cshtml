@{
    /**/

    Layout = "~/Views/Shared/_LayoutIndex.cshtml";
    ViewBag.Title = "Contenido de la Normatividad";

    string data = ViewBag.data;
}

<style type="text/css">
    

</style>

<link href="~/Content/font-awesome.min.css" rel="stylesheet" />
<link href="~/Content/Extras.css" rel="stylesheet" />
<script src="~/Scripts/sharedScripts.js"></script>

<script src="~/Scripts/Certificacion.js"></script>
<link href="~/Content/bootstrap-select.min.css" rel="stylesheet" />
<script src="~/Scripts/bootstrap-select.js"></script>

<script src="~/Scripts/OrgChart.js"></script>

<script>

    OrgChart.templates.ula.field_0 =
        '<text width="240" class="field_0" style="font-size: 18px;" fill="#039BE5" x="5" y="50">{val}</text>';

    var chart;
    $(document).ready(function () {
        var EncData2 = @Html.Raw(ViewBag.JsonData);

        chart = new OrgChart(document.getElementById("orgchart"), {
            menu: {
                pdf: { text: "Export PDF" },
                png: { text: "Export PNG" },
                svg: { text: "Export SVG" },
                csv: { text: "Export CSV" }
            },
            nodeMenu: {
                addP: {
                    icon: "<i class='fa fa-plus'></i>",
                    text: "Agregar",
                    onClick: showAddForm
                },
                editP: {
                    icon: "<i class='fa fa-pencil'></i>",
                    text: "Editar",
                    onClick: showEditForm
                },
                deleteP: {
                    icon: "<i class='fa fa-trash'></i>",
                    text: "Borrar",
                    onClick: showDeleteForm
                },
                assignU: {
                    icon: "<i class='fa fa-group'></i>",
                    text: "Asignar Usuarios",
                    onClick: AssignUsers
                }
            },
            toolbar: true,
            onUpdate: dragged,
            onClick: clicNode,
            nodeMouseClickBehaviour: BALKANGraph.action.none,
            enableDragDrop: false,
            template: "ula",
            nodeBinding: {
                field_0: "Nombre",
                field_1: "Clave",
            },
            nodes: EncData2
        });
    });


    function clicNode(sender, node) {

        $('body').addClass('loading')

        var id = node["id"];

        $.ajax({
            dataType: "html",
            type: "post",
            url: '@(Url.Action("loadData", "Normatividad"))',
            data: { id },
            success: function (data) {
                $("#contenedor1").html(data);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                toastr.error("algo salio mal");
            }
        });
        return false;
    }














    function dragged(sender, oldNode, newNode) {

        var idNewP = newNode["pid"];
        var id = oldNode["id"];

        $.ajax({
            dataType: "html",
            type: "post",
            url: '@(Url.Action("Move", "Puesto"))',
            data: { idNewP,id },
            success: function (data) {
                $("#contenedor1").html(data);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                return false;
                toastr.error("algo salio mal");
            }
        });
        return false;
    }

    function disAbleForm(op) {
        if (op == 0) {
            $('#form1 input,textarea').prop('disabled', true);
        }
        if (op == 1) {
            $('#form1 input,textarea').prop('disabled', false);
        }
    }

    function intFields() {
        $("#id_puesto_padre").val("");
        $("#id_puesto").val("");
        $("#cl_puesto").val("");
        $("#nb_puesto").val("");
        $("#errorP").html('');
        $("#partialModal").html("");
        $("#form1").show();
    }

    function showAddForm(id) {
        $("#gridModalLabel").html("Agregar Puesto");
        intFields();
        $("#id_puesto_padre").val(id);

        disAbleForm(1);
        $(".editNode").hide();
        $(".deleteNode").hide();
        $(".createNode").show();
        $("#modal").modal('show');
    }

    function showEditForm(id) {
        $("#gridModalLabel").html("Editar Puesto");
        var nodeData = chart.get(id);
        var clPuesto = nodeData["Clave"];
        var nbPuesto = nodeData["Nombre"];
        var dsPuesto = nodeData["Descripcion"];

        intFields();
        $("#id_puesto").val(id);
        $("#cl_puesto").val(clPuesto);
        $("#nb_puesto").val(nbPuesto);
        $("#tag_puesto").val(dsPuesto);

        disAbleForm(1);
        $(".createNode").hide();
        $(".deleteNode").hide();
        $(".editNode").show();
        $("#modal").modal('show');
    }

    function showDeleteForm(id) {
        $("#gridModalLabel").html("Borrar Puesto");
        var nodeData = chart.get(id);
        var clPuesto = nodeData["Clave"];
        var nbPuesto = nodeData["Nombre"];
        var dsPuesto = nodeData["Descripcion"];
        var pid = nodeData["pid"];

        if (pid == "") {
            toastr.error("No se puede eliminar el puesto raiz");
            return;
        }

        intFields();
        $("#id").val(id);
        $("#cl_puesto").val(clPuesto);
        $("#nb_puesto").val(nbPuesto);
        $("#tag_puesto").val(dsPuesto);
        $("#errorP").html("Al confirmar se borrará este puesto así como todos los nodos inferiores y los usuarios que tengan este puesto, quedarán sin puesto.");


        disAbleForm(0);
        $(".createNode").hide();
        $(".editNode").hide();
        $(".deleteNode").show();
        $("#modal").modal('show');
    }

    function AssignUsers(id) {
        $("#gridModalLabel").html("Asignar Usuarios");
        intFields();
        $("#form1").hide();

        $("#partialModal").html('<div class="row"><div class="col-md-offset-5 col-xs-offset-1 col-md-1 col-xs-1"><span id="ind1" class="IndicatorLoader centered"></span></div></div>')

        $("#partialModal").load('@(Url.Action("AssignUsers", "Puesto",null))?id=' + id);

        $("#modal").modal('show');
    }



    function crearP() {
        var error = Validar();
        if (error != "") {
            $("#errorP").html(error);
        } else {
            $.ajax({
                dataType: "html",
                type: "post",
                url: '@(Url.Action("Create2", "Puesto"))',
                data: $("#form1").serialize(),
                success: function (data) {
                    $("#contenedor1").html(data);
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    toastr.error("algo salio mal");
                }
            });

            $("#modal").modal('hide');
        }
    }

    function editarP() {
        var error = Validar();
        if (error != "") {
            $("#errorP").html(error);
        } else {
            $.ajax({
                dataType: "html",
                type: "post",
                url: '@(Url.Action("Edit2", "Puesto"))',
                data: $("#form1").serialize(),
                success: function (data) {
                    $("#contenedor1").html(data);
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    toastr.error("algo salio mal");
                }
            });
            $("#modal").modal('hide');
        }
    }
    
    function borrarP() {
        $.ajax({
            dataType: "html",
            type: "post",
            url: '@(Url.Action("Delete2", "Puesto"))',
            data: $("#form2").serialize(),
            success: function (data) {
                $("#contenedor1").html(data);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                toastr.error("algo salio mal");
            }
        });
        $("#modal").modal('hide');
    }

    function saveUsers() {
        $.ajax({
            dataType: "html",
            type: "post",
            url: '@(Url.Action("AssignUsers", "Puesto"))',
            data: $("#formAux").serialize(),
            success: function (data) {
                toastr.success("Los usuarios se asignaron con éxito.");
            },
            error: function (xhr, ajaxOptions, thrownError) {
                toastr.error("algo salio mal");
            }
        });
        $("#modal").modal('hide');
    }


    function Validar() {
        var error = "";

        var nombre = $("#nb_puesto").val();

        if (nombre == "" || nombre == null) {
            if (error != "") error += "<br/>";
            error += "El nombre es un campo obligatorio.";
        } else {
            if (nombre.length > 256) {
                if (error != "") error += "<br/>";
                error += "La longitud máxima del nombre es de 256 caracteres.";
            }
        }
        return error;
    }

</script>

<h2>@ViewBag.Title</h2>

<div class="jumbotron well">
    <div style="width:100%; height:580px;" id="orgchart"></div>
</div>


<div class="modal fade" id="modal" tabindex="-1" role="dialog" aria-labelledby="Aviso" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <center>
                    <h2 class="modal-title" id="gridModalLabel" style="color: #fff;"></h2>
                </center>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
            </div>
            <div class="modal-body">
                <div id="partialModal"></div>
                <form class="form-horizontal" id="form1">
                    @Html.AntiForgeryToken()
                    <input type="text" id="id_puesto" name="id_puesto" hidden>
                    <input type="text" id="id_puesto_padre" name="id_puesto_padre" hidden>
                    <table>
                        <tbody>
                            <tr class="editNode deleteNode">
                                <td width="100">Clave</td>
                                <td width="200">
                                    <div class="input-group">
                                        <input class="form-control text-box single-line" data-val="true" data-val-required="La clave es un campo requerido." id="cl_puesto" name="cl_puesto" type="text" value="" readonly>
                                        <div class="input-group-btn">
                                            <button type="button" class="btn btn-default" title="" data-toggle="popover" data-trigger="hover" data-content="La clave indica el nivel al que pertenece el puesto." data-original-title="Atención">
                                                <i class="glyphicon glyphicon-question-sign"></i>
                                            </button>
                                        </div>
                                    </div>
                                </td>
                                <td width="250"></td>
                            </tr>
                            <tr>
                                <td width="100">Nombre</td>
                                <td width="200">
                                    <div class="input-group">
                                        <input class="form-control text-box single-line" data-val="true" data-val-required="El nombre es un campo requerido." id="nb_puesto" name="nb_puesto" type="text" value="">
                                        <div class="input-group-btn">
                                            <button type="button" class="btn btn-default" title="" data-toggle="popover" data-trigger="hover" data-content="Ingrese un nombre para el nuevo puesto." data-original-title="Atención">
                                                <i class="glyphicon glyphicon-question-sign"></i>
                                            </button>
                                        </div>
                                    </div>
                                </td>
                                <td width="250">
                                    
                                </td>
                            </tr>
                            <tr>
                                <td width="100">Descripción del puesto</td>
                                <td width="400">
                                    <div class="input-group col-md-12">
                                        @Html.TextArea("tag_puesto", new { @class = "form-control", @rows = "5", @title = "Atención", data_trigger = "hover", data_toggle = "popover", data_content = "Escriba el la descripción para éste puesto." })
                                    </div>
                                </td>
                                <td width="250"></td>
                            </tr>
                            <tr>
                                <td width="100"></td>
                                <td width="400">
                                </td>
                                <td width="250">
                                    <center>
                                        <input type="button" class="btn btn-primary createNode" value="Guardar" onclick="crearP()" hidden />
                                        <input type="button" class="btn btn-primary editNode" value="Guardar" onclick="editarP()" hidden />
                                        <button type="button" class="btn btn-default deleteNode" onclick="borrarP()" hidden>Borrar</button>
                                    </center>
                                </td>
                            </tr>

                        </tbody>
                    </table>
                </form>
            </div>
            <div class="modal-footer">
                <div id="errorP" class="pull-left" style="color:indianred;">Hay un error</div>
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancelar</button>
            </div>
        </div>
    </div>
</div>

<div id="contenedor1"></div>

<form id="form2" hidden>
    @Html.AntiForgeryToken()
    <input id="id" name="id" hidden />
</form>
