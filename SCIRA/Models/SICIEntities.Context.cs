//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SCIRA.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SICIEntities : DbContext
    {
        public SICIEntities()
            : base("name=SICIEntities")
        {
            Database.Connection.ConnectionString = Utilidades.Utilidades.GetConnectionString();
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<a_campo_cobertura_control> a_campo_cobertura_control { get; set; }
        public virtual DbSet<a_input_rc> a_input_rc { get; set; }
        public virtual DbSet<a_procedimiento_prueba_rc> a_procedimiento_prueba_rc { get; set; }
        public virtual DbSet<c_actividad> c_actividad { get; set; }
        public virtual DbSet<c_ambito_riesgo_operacional> c_ambito_riesgo_operacional { get; set; }
        public virtual DbSet<c_archivo> c_archivo { get; set; }
        public virtual DbSet<c_area> c_area { get; set; }
        public virtual DbSet<c_area_costeo> c_area_costeo { get; set; }
        public virtual DbSet<c_area_costeo_n2> c_area_costeo_n2 { get; set; }
        public virtual DbSet<c_area_costeo_n3> c_area_costeo_n3 { get; set; }
        public virtual DbSet<c_area_costeo_n3_sub_proceso> c_area_costeo_n3_sub_proceso { get; set; }
        public virtual DbSet<c_area_costeo_sub_proceso> c_area_costeo_sub_proceso { get; set; }
        public virtual DbSet<c_aseveracion> c_aseveracion { get; set; }
        public virtual DbSet<c_auditoria> c_auditoria { get; set; }
        public virtual DbSet<c_calificacion> c_calificacion { get; set; }
        public virtual DbSet<c_calificacion_indicador> c_calificacion_indicador { get; set; }
        public virtual DbSet<c_calificacion_revision> c_calificacion_revision { get; set; }
        public virtual DbSet<c_campo_auditoria> c_campo_auditoria { get; set; }
        public virtual DbSet<c_campo_programa> c_campo_programa { get; set; }
        public virtual DbSet<c_canal_riesgo_operacional> c_canal_riesgo_operacional { get; set; }
        public virtual DbSet<c_catalogo_concepto> c_catalogo_concepto { get; set; }
        public virtual DbSet<c_categoria_control> c_categoria_control { get; set; }
        public virtual DbSet<c_categoria_linea_negocio_riesgo_operacional> c_categoria_linea_negocio_riesgo_operacional { get; set; }
        public virtual DbSet<c_categoria_riesgo> c_categoria_riesgo { get; set; }
        public virtual DbSet<c_causa_bdei> c_causa_bdei { get; set; }
        public virtual DbSet<c_centro_costo> c_centro_costo { get; set; }
        public virtual DbSet<c_clase_evento> c_clase_evento { get; set; }
        public virtual DbSet<c_clase_tipologia_riesgo> c_clase_tipologia_riesgo { get; set; }
        public virtual DbSet<c_clasificacion_incidencia> c_clasificacion_incidencia { get; set; }
        public virtual DbSet<c_comite> c_comite { get; set; }
        public virtual DbSet<c_concepto_cuenta_contable> c_concepto_cuenta_contable { get; set; }
        public virtual DbSet<c_contenido_grupo> c_contenido_grupo { get; set; }
        public virtual DbSet<c_contenido_manual> c_contenido_manual { get; set; }
        public virtual DbSet<c_contenido_normatividad> c_contenido_normatividad { get; set; }
        public virtual DbSet<c_criticidad> c_criticidad { get; set; }
        public virtual DbSet<c_criticidad_normatividad> c_criticidad_normatividad { get; set; }
        public virtual DbSet<c_criticidad_programa_trabajo> c_criticidad_programa_trabajo { get; set; }
        public virtual DbSet<c_criticidad_riesgo> c_criticidad_riesgo { get; set; }
        public virtual DbSet<c_criticidad_riesgo_ro> c_criticidad_riesgo_ro { get; set; }
        public virtual DbSet<c_criticidad_ro> c_criticidad_ro { get; set; }
        public virtual DbSet<c_criticidad1> c_criticidad1 { get; set; }
        public virtual DbSet<c_cuenta_contable> c_cuenta_contable { get; set; }
        public virtual DbSet<c_cumplimiento> c_cumplimiento { get; set; }
        public virtual DbSet<c_division_auditoria> c_division_auditoria { get; set; }
        public virtual DbSet<c_ds_evento> c_ds_evento { get; set; }
        public virtual DbSet<c_entidad> c_entidad { get; set; }
        public virtual DbSet<c_error_contable> c_error_contable { get; set; }
        public virtual DbSet<c_estatus_bdei> c_estatus_bdei { get; set; }
        public virtual DbSet<c_estatus_programa_trabajo> c_estatus_programa_trabajo { get; set; }
        public virtual DbSet<c_estatus_usuario> c_estatus_usuario { get; set; }
        public virtual DbSet<c_estructura_manual> c_estructura_manual { get; set; }
        public virtual DbSet<c_etapa> c_etapa { get; set; }
        public virtual DbSet<c_evento_riesgo> c_evento_riesgo { get; set; }
        public virtual DbSet<c_factibilidad> c_factibilidad { get; set; }
        public virtual DbSet<c_frecuencia> c_frecuencia { get; set; }
        public virtual DbSet<c_frecuencia_control> c_frecuencia_control { get; set; }
        public virtual DbSet<c_frecuencia_indicador> c_frecuencia_indicador { get; set; }
        public virtual DbSet<c_frecuencia_riesgo_operacional> c_frecuencia_riesgo_operacional { get; set; }
        public virtual DbSet<c_funcion> c_funcion { get; set; }
        public virtual DbSet<c_grado_cobertura> c_grado_cobertura { get; set; }
        public virtual DbSet<c_grupo_cuenta_contable> c_grupo_cuenta_contable { get; set; }
        public virtual DbSet<c_impacto_monetario> c_impacto_monetario { get; set; }
        public virtual DbSet<c_impacto_riesgo_operacional> c_impacto_riesgo_operacional { get; set; }
        public virtual DbSet<c_indicador> c_indicador { get; set; }
        public virtual DbSet<c_indicador_diario> c_indicador_diario { get; set; }
        public virtual DbSet<c_linea_negocio> c_linea_negocio { get; set; }
        public virtual DbSet<c_linea_negocio_riesgo_operacional> c_linea_negocio_riesgo_operacional { get; set; }
        public virtual DbSet<c_macro_proceso> c_macro_proceso { get; set; }
        public virtual DbSet<c_magnitud_impacto> c_magnitud_impacto { get; set; }
        public virtual DbSet<c_menu_funcion> c_menu_funcion { get; set; }
        public virtual DbSet<c_mes> c_mes { get; set; }
        public virtual DbSet<c_meta_campo> c_meta_campo { get; set; }
        public virtual DbSet<c_minimo_riesgo_operativo> c_minimo_riesgo_operativo { get; set; }
        public virtual DbSet<c_moneda> c_moneda { get; set; }
        public virtual DbSet<c_naturaleza_control> c_naturaleza_control { get; set; }
        public virtual DbSet<c_nivel_manual> c_nivel_manual { get; set; }
        public virtual DbSet<c_nivel_normatividad> c_nivel_normatividad { get; set; }
        public virtual DbSet<c_normatividad> c_normatividad { get; set; }
        public virtual DbSet<c_obligacion> c_obligacion { get; set; }
        public virtual DbSet<c_origen_autoridad> c_origen_autoridad { get; set; }
        public virtual DbSet<c_parametro> c_parametro { get; set; }
        public virtual DbSet<c_periodo_auditoria> c_periodo_auditoria { get; set; }
        public virtual DbSet<c_periodo_certificacion> c_periodo_certificacion { get; set; }
        public virtual DbSet<c_periodo_indicador> c_periodo_indicador { get; set; }
        public virtual DbSet<c_probabilidad_ocurrencia> c_probabilidad_ocurrencia { get; set; }
        public virtual DbSet<c_proceso> c_proceso { get; set; }
        public virtual DbSet<c_proceso_benchmark> c_proceso_benchmark { get; set; }
        public virtual DbSet<c_proceso_riesgo_operacional> c_proceso_riesgo_operacional { get; set; }
        public virtual DbSet<c_producto_riesgo_operacional> c_producto_riesgo_operacional { get; set; }
        public virtual DbSet<c_prueba_auditoria> c_prueba_auditoria { get; set; }
        public virtual DbSet<c_prueba_auto_eval> c_prueba_auto_eval { get; set; }
        public virtual DbSet<c_puesto> c_puesto { get; set; }
        public virtual DbSet<c_rango> c_rango { get; set; }
        public virtual DbSet<c_rango_costeo> c_rango_costeo { get; set; }
        public virtual DbSet<c_rango_costeo_auditoria> c_rango_costeo_auditoria { get; set; }
        public virtual DbSet<c_rating_auditoria> c_rating_auditoria { get; set; }
        public virtual DbSet<c_requiere_ficha> c_requiere_ficha { get; set; }
        public virtual DbSet<c_riesgo_asociado_bdei> c_riesgo_asociado_bdei { get; set; }
        public virtual DbSet<c_rol> c_rol { get; set; }
        public virtual DbSet<c_solicitante_auditoria> c_solicitante_auditoria { get; set; }
        public virtual DbSet<c_sub_clase_tipologia_riesgo> c_sub_clase_tipologia_riesgo { get; set; }
        public virtual DbSet<c_sub_etapa> c_sub_etapa { get; set; }
        public virtual DbSet<c_sub_proceso> c_sub_proceso { get; set; }
        public virtual DbSet<c_sub_proceso_benchmark> c_sub_proceso_benchmark { get; set; }
        public virtual DbSet<c_sub_proceso_normatividad> c_sub_proceso_normatividad { get; set; }
        public virtual DbSet<c_sub_tipo_producto_riesgo_operacional> c_sub_tipo_producto_riesgo_operacional { get; set; }
        public virtual DbSet<c_sub_tipo_riesgo_operacional> c_sub_tipo_riesgo_operacional { get; set; }
        public virtual DbSet<c_tipo_evaluacion> c_tipo_evaluacion { get; set; }
        public virtual DbSet<c_tipo_evidencia> c_tipo_evidencia { get; set; }
        public virtual DbSet<c_tipo_impacto> c_tipo_impacto { get; set; }
        public virtual DbSet<c_tipo_normatividad> c_tipo_normatividad { get; set; }
        public virtual DbSet<c_tipo_riesgo> c_tipo_riesgo { get; set; }
        public virtual DbSet<c_tipo_riesgo_asociado> c_tipo_riesgo_asociado { get; set; }
        public virtual DbSet<c_tipo_riesgo_operacional> c_tipo_riesgo_operacional { get; set; }
        public virtual DbSet<c_tipo_solucion> c_tipo_solucion { get; set; }
        public virtual DbSet<c_tipologia_control> c_tipologia_control { get; set; }
        public virtual DbSet<c_tipologia_riesgo> c_tipologia_riesgo { get; set; }
        public virtual DbSet<c_tipologia_sub_proceso> c_tipologia_sub_proceso { get; set; }
        public virtual DbSet<c_unidad_indicador> c_unidad_indicador { get; set; }
        public virtual DbSet<c_usuario> c_usuario { get; set; }
        public virtual DbSet<c_usuario_auditoria> c_usuario_auditoria { get; set; }
        public virtual DbSet<c_usuario_sub_proceso> c_usuario_sub_proceso { get; set; }
        public virtual DbSet<h_acceso> h_acceso { get; set; }
        public virtual DbSet<h_excepcion> h_excepcion { get; set; }
        public virtual DbSet<h_password> h_password { get; set; }
        public virtual DbSet<info_sici> info_sici { get; set; }
        public virtual DbSet<k_auditoria> k_auditoria { get; set; }
        public virtual DbSet<k_bdei> k_bdei { get; set; }
        public virtual DbSet<k_benchmarck> k_benchmarck { get; set; }
        public virtual DbSet<k_campo_auditoria> k_campo_auditoria { get; set; }
        public virtual DbSet<k_campo_programa> k_campo_programa { get; set; }
        public virtual DbSet<k_certificacion_control> k_certificacion_control { get; set; }
        public virtual DbSet<k_certificacion_estructura> k_certificacion_estructura { get; set; }
        public virtual DbSet<k_comentario_programa_trabajo> k_comentario_programa_trabajo { get; set; }
        public virtual DbSet<k_control> k_control { get; set; }
        public virtual DbSet<k_evaluacion> k_evaluacion { get; set; }
        public virtual DbSet<k_evaluacion_diaria> k_evaluacion_diaria { get; set; }
        public virtual DbSet<k_incidencia> k_incidencia { get; set; }
        public virtual DbSet<k_objeto> k_objeto { get; set; }
        public virtual DbSet<k_plan> k_plan { get; set; }
        public virtual DbSet<k_programa_trabajo> k_programa_trabajo { get; set; }
        public virtual DbSet<k_revision_control> k_revision_control { get; set; }
        public virtual DbSet<k_riesgo> k_riesgo { get; set; }
        public virtual DbSet<k_riesgo_derogado> k_riesgo_derogado { get; set; }
        public virtual DbSet<k_riesgo_residual> k_riesgo_residual { get; set; }
        public virtual DbSet<kd_r2811> kd_r2811 { get; set; }
        public virtual DbSet<kd_r2812> kd_r2812 { get; set; }
        public virtual DbSet<kd_r2813> kd_r2813 { get; set; }
        public virtual DbSet<kg_r2811> kg_r2811 { get; set; }
        public virtual DbSet<kg_r2812> kg_r2812 { get; set; }
        public virtual DbSet<kg_r2813> kg_r2813 { get; set; }
        public virtual DbSet<r_conclusion_plan> r_conclusion_plan { get; set; }
        public virtual DbSet<r_contestacion_oficio> r_contestacion_oficio { get; set; }
        public virtual DbSet<r_control> r_control { get; set; }
        public virtual DbSet<r_evento> r_evento { get; set; }
        public virtual DbSet<r_macro_proceso> r_macro_proceso { get; set; }
        public virtual DbSet<r_proceso> r_proceso { get; set; }
        public virtual DbSet<r_registro_evento> r_registro_evento { get; set; }
        public virtual DbSet<r_respuesta> r_respuesta { get; set; }
        public virtual DbSet<r_riesgo> r_riesgo { get; set; }
        public virtual DbSet<r_seguimiento> r_seguimiento { get; set; }
        public virtual DbSet<r_sub_proceso> r_sub_proceso { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<v_bdei> v_bdei { get; set; }
        public virtual DbSet<v_benchmark> v_benchmark { get; set; }
        public virtual DbSet<v_certificacion> v_certificacion { get; set; }
        public virtual DbSet<v_estructura> v_estructura { get; set; }
        public virtual DbSet<v_flujo_narrativa> v_flujo_narrativa { get; set; }
        public virtual DbSet<v_indicador> v_indicador { get; set; }
        public virtual DbSet<v_IyP_t1> v_IyP_t1 { get; set; }
        public virtual DbSet<v_IyP_t2> v_IyP_t2 { get; set; }
        public virtual DbSet<v_IyP_t3> v_IyP_t3 { get; set; }
        public virtual DbSet<v_IyP_t4> v_IyP_t4 { get; set; }
        public virtual DbSet<v_IyP_t5> v_IyP_t5 { get; set; }
        public virtual DbSet<v_IyP_t6> v_IyP_t6 { get; set; }
        public virtual DbSet<v_mryc> v_mryc { get; set; }
    
        public virtual int genera_r2811(Nullable<int> id_r2811, Nullable<int> anno, Nullable<int> periodo, string usuario, Nullable<int> id_entidad)
        {
            var id_r2811Parameter = id_r2811.HasValue ?
                new ObjectParameter("id_r2811", id_r2811) :
                new ObjectParameter("id_r2811", typeof(int));
    
            var annoParameter = anno.HasValue ?
                new ObjectParameter("anno", anno) :
                new ObjectParameter("anno", typeof(int));
    
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("periodo", periodo) :
                new ObjectParameter("periodo", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var id_entidadParameter = id_entidad.HasValue ?
                new ObjectParameter("id_entidad", id_entidad) :
                new ObjectParameter("id_entidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("genera_r2811", id_r2811Parameter, annoParameter, periodoParameter, usuarioParameter, id_entidadParameter);
        }
    
        public virtual int genera_r2812(Nullable<int> id_r2812, Nullable<int> anno, string usuario, Nullable<int> id_entidad)
        {
            var id_r2812Parameter = id_r2812.HasValue ?
                new ObjectParameter("id_r2812", id_r2812) :
                new ObjectParameter("id_r2812", typeof(int));
    
            var annoParameter = anno.HasValue ?
                new ObjectParameter("anno", anno) :
                new ObjectParameter("anno", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var id_entidadParameter = id_entidad.HasValue ?
                new ObjectParameter("id_entidad", id_entidad) :
                new ObjectParameter("id_entidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("genera_r2812", id_r2812Parameter, annoParameter, usuarioParameter, id_entidadParameter);
        }
    
        public virtual int genera_r2813(Nullable<int> id_r2813, Nullable<int> anno, Nullable<int> periodo, string usuario, Nullable<int> id_entidad)
        {
            var id_r2813Parameter = id_r2813.HasValue ?
                new ObjectParameter("id_r2813", id_r2813) :
                new ObjectParameter("id_r2813", typeof(int));
    
            var annoParameter = anno.HasValue ?
                new ObjectParameter("anno", anno) :
                new ObjectParameter("anno", typeof(int));
    
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("periodo", periodo) :
                new ObjectParameter("periodo", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var id_entidadParameter = id_entidad.HasValue ?
                new ObjectParameter("id_entidad", id_entidad) :
                new ObjectParameter("id_entidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("genera_r2813", id_r2813Parameter, annoParameter, periodoParameter, usuarioParameter, id_entidadParameter);
        }
    
        public virtual ObjectResult<obtiene_controles_Result> obtiene_controles(Nullable<int> id_usuario)
        {
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<obtiene_controles_Result>("obtiene_controles", id_usuarioParameter);
        }
    
        public virtual ObjectResult<obtiene_sub_procesos_Result> obtiene_sub_procesos(Nullable<int> id_usuario)
        {
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<obtiene_sub_procesos_Result>("obtiene_sub_procesos", id_usuarioParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
